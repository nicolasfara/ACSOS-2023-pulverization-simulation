incarnation: protelis

environment:
  type: OSMEnvironment
  parameters: ["romagna.pbf", true, true]

variables:
  max_lat: &max_lat
    formula: 44.14795317094557
  min_lat: &min_lat
    formula: 44.13340676305022
  max_lon: &max_lon
    formula: 12.267570291912632
  min_lon: &min_lon
    formula: 12.235568921311268
  latitude_space: &latitude_space
    formula: max_lat - min_lat
  rng:
    formula: kotlin.random.Random(3457541856)
    language: kotlin
  realDeviceCount: &real_device_count
    type: GeometricVariable
    parameters: [250, 5, 500, 5]
  start_coords: &start_coords
    formula: |
      fun randomIn(range: ClosedRange<Double>) = (rng as kotlin.random.Random).nextDouble(range.start, range.endInclusive)
      generateSequence {
        listOf(randomIn(min_lat..max_lat), randomIn(min_lon..max_lon))
      }.take(Math.ceil(realDeviceCount).toInt()).toList()
    language: kotlin
  longitude_space: &longitude_space
    formula: max_lon - min_lon
  range: &range
    type: ArbitraryVariable
    parameters: [50, [10, 20, 50, 100, 200, 500, 1000, 2000]]
  seed: &seed
    type: LinearVariable
    parameters: [0, 0, 49, 1]

seeds:
  scenario: *seed
  simulation: *seed

network-model:
  type: ConnectWithinDistance
  parameters: [*range]

_random-target: &random-target
  - time-distribution: 0.5
    program: org:protelis:randomTarget
  - program: send

_discharge: &discharge
  - time-distribution: 2.0
    program: org:protelis:dischargeBattery

_move: &move
  - type: Event
    time-distribution: 1.0
    actions:
      - type: TargetMapWalker
        parameters: [target, 1.4]
  - type: Event
    time-distribution:
      type: Trigger
      parameters: 0
    actions:
      - type: RunProtelisProgram
        parameters: |
          env.put("target", env.get("initialTargets").get(self.getDeviceUID().getId()))

_device: &device
  type: Rectangle
  parameters: [*real_device_count, *min_lat, *min_lon, *latitude_space, *longitude_space]
  programs: [*random-target, *move, *discharge]
  contents:
    - molecule: minLon
      concentration: *min_lon
    - molecule: maxLon
      concentration: *max_lon
    - molecule: minLat
      concentration: *min_lat
    - molecule: maxLat
      concentration: *max_lat
    - molecule: initialTargets
      concentration: *start_coords
    - molecule: runningHost
      concentration: "\"cloud\""
    - molecule: deviceDischargeRate
      concentration: 0.05
    - molecule: cloudDischargeRate
      concentration: 0.001

deployments:
  - *device
